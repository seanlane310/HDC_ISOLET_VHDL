%%Frequency Bin Creation Test

r = audiorecorder(44100,16,1);
record(r);
fprintf("1");
pause(2);
stop(r);
y = getaudiodata(r,'double');

%% Do Processing
plot(y);

pause(5);

N = 0:length(y)-1;

X = fft(y); %need to trim it before get here
plot(abs(X(1:length(X)/16)));

Z = abs(X);

total = length(1:length(X)/16);
bins = 100;

binsize = total/bins;

for i = 1:bins
        average(i) = mean(Z((i*binsize)+1:((i+1)*binsize)));
end

fprintf("done");

plot(average);

%% Project Frequency Bins onto Hypervectors
BaseVectors1 = randi([0,1],1,1000);
BaseVectors1(BaseVectors1 == 0) = -1;

BaseVectors2 = randi([0,1],1,1000);
BaseVectors2(BaseVectors2 == 0) = -1;

BaseVectors3 = randi([0,1],1,1000);
BaseVectors3(BaseVectors3 == 0) = -1;

BaseVectors4 = randi([0,1],1,1000);
BaseVectors4(BaseVectors4 == 0) = -1;

BaseVectors5 = randi([0,1],1,1000);
BaseVectors5(BaseVectors5 == 0) = -1;

BaseVectors6 = randi([0,1],1,1000);
BaseVectors6(BaseVectors6 == 0) = -1;

BaseVectors7 = randi([0,1],1,1000);
BaseVectors7(BaseVectors7 == 0) = -1;

BaseVectors8 = randi([0,1],1,1000);
BaseVectors8(BaseVectors8 == 0) = -1;

BaseVectors9 = randi([0,1],1,1000);
BaseVectors9(BaseVectors9 == 0) = -1;

BaseVectors10 = randi([0,1],1,1000);
BaseVectors10(BaseVectors10 == 0) = -1;

%% Encode Hypervectors Together
%Permutate, add, multiply (ppA + pB + C)

A = [1, 9, 4, 3, 7, 6, 4, 2, 9, 6, 17, 8, 3, 22, 47, 3, 9, 6, 2, 0];

%Permutate
C = circshift(A,-1);

%Addition
D = A + B';

%Multiply
E = A .* B';
